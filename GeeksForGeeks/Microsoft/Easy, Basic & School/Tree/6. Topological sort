https://practice.geeksforgeeks.org/problems/topological-sort/1

static void topoSort(ArrayList<ArrayList<Integer>> list, boolean[] visited, Stack<Integer> st, int i){
        visited[i]= true;
        ArrayList<Integer> arr= list.get(i);
         
        for(int j=0; j< arr.size(); j++)
        {
            if(!visited[arr.get(j)]){
                topoSort(list, visited, st, arr.get(j));
            }
        }
        st.push(i);
    }
    
    static int[] topoSort(ArrayList<ArrayList<Integer>> list, int N) {
        Stack<Integer> st = new Stack<Integer>();
        boolean[] visited = new boolean[N];
  
        for(int i=0; i<N; i++)
        {
            if(!visited[i]){
                topoSort(list, visited, st, i);
            }
        }
        int k=0;
        int[] res=new int[N];
        for(int i: st)
        {
            res[k++]=i;
        }
        return res;
    }
