import java.util.*;
import java.lang.*;
import java.io.*;
class GFG {

    static int knapsack(int[] wt, int val[], int w, int n) {
        if (w == 0 || n == 0) {
            return 0;
        }
        if (w >= wt[n - 1]) {
            return Math.max(val[n - 1] + knapsack(wt, val, w - wt[n - 1], n - 1), knapsack(wt, val, w, n - 1));
        } else {
            return knapsack(wt, val, w, n - 1);
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        for (int j = 0; j < t; j++) {
            int n = sc.nextInt();
            int w = sc.nextInt();
            int val[] = new int[n];
            int wt[] = new int[n];
            for (int i = 0; i < n; i++) {
                val[i] = sc.nextInt();
            }
            for (int i = 0; i < n; i++) {
                wt[i] = sc.nextInt();
            }
            System.out.println(knapsack(wt, val, w, n));
        }
    }
}
