https://practice.geeksforgeeks.org/problems/longest-palindromic-subsequence/0

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	static int longestPalindromicSubsequence(String s, int n)
    {
        int[][] res =  new int[n][n];
        for(int i=0;i<n;i++)
        {
            res[i][i]=1;
        }
        for(int cl=2 ; cl<=n; cl++)
        {
            for(int i=0; i<n-cl+1; i++)
            {
                int j=i+cl-1;
                if(s.charAt(i)==s.charAt(j) && cl==2)
                {
                    res[i][j]=2;
                }
                else if(s.charAt(i)==s.charAt(j))
                {
                    res[i][j]=res[i+1][j-1]+2;
                }
                else
                {
                     res[i][j]=Math.max(res[i][j-1], res[i+1][j]);
                }
            }
        }
        return res[0][n-1];
    }
	public static void main (String[] args)
	 {
	  Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    for(int i=0;i<n;i++)
	    {
	        String s=sc.next();
	        System.out.println(longestPalindromicSubsequence(s, s.length()));
	    }
	 }
}
