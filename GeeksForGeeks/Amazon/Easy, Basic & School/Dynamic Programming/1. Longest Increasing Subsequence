https://practice.geeksforgeeks.org/problems/longest-increasing-subsequence/0

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
    static int longestIncreasingSubsequence(int[] arr, int n)
    {
        int lis[]= new int[n];
        Arrays.fill(lis, 1);
        for(int i=1;i<n;i++)
        {
            for(int j=0; j<i;j++)
            {
                if(arr[i]>arr[j] && (lis[i]<lis[j]+1))
                {
                    lis[i] = lis[j]+1;
                }
            }
        }
        int res=lis[0];
        for(int i=1;i<n;i++)
        {
            res= Math.max(lis[i], res);
        }
        return res;
    }
	public static void main (String[] args)
	 {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    for(int i=0;i<n;i++)
	    {
	        int t=sc.nextInt();
	        int[] arr=new int[t];
	        for(int j=0;j<t;j++)
	        {
	            arr[j]=sc.nextInt();
	        }
	        System.out.println(longestIncreasingSubsequence(arr, arr.length));
	    }
	 }
}
