/*
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

Example:

Input: [-2,1,-3,4,-1,2,1,-5,4],
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
Follow up:

If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.
*/

class Solution {
    public int maxSubArray(int[] nums) {
      int curr_max = nums[0];
      int max_till_now = nums[0];
      for(int i=1;i<nums.length;i++)
      {
        curr_max = Math.max(curr_max+nums[i], nums[i]);
        max_till_now = Math.max(max_till_now, curr_max);
      }
      return max_till_now;        
    }
}
