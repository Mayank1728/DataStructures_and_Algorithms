class Solution {
    public String removeKdigits(String num, int k) {
        if (k == 0 || num == null)
            return num;
        if (k == num.length())
            return "0";
        Stack < Integer > st = new Stack < Integer > ();
        int[] ch = new int[num.length()];
        for (int i = 0; i < num.length(); i++) {
            ch[i] = Character.getNumericValue(num.charAt(i));
        }
        st.push(ch[0]);
        int i = 1;

        while (i < ch.length) {
            while (!st.isEmpty() && i < ch.length && st.peek() > ch[i] && k > 0) {
                st.pop();
                k--;
            }
            st.push(ch[i]);
            i++;

        }
        if (st.size() == 0)
            return "0";
        StringBuffer sb = new StringBuffer();
        while (!st.isEmpty()) {
            sb.append(st.pop());
        }
        while (sb.length() > 0 && sb.charAt(sb.length() - 1) == '0') {
            sb.deleteCharAt(sb.length() - 1);
        }
        sb.reverse();
        if (k > 0 && sb.length() >= k) {
            sb.delete(sb.length() - k, sb.length());
        }
        if (sb.length() == 0)
            return "0";
        return new String(sb);

    }
}
