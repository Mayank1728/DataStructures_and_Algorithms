https://www.youtube.com/watch?v=XNKCkX_tHhM

class Solution {

    private int dfs(int[][] grid, int zero, int x, int y) {
        if (x < 0 || x >= grid.length || y < 0 || y >= grid[0].length || grid[x][y] == -1)
            return 0;
        if (grid[x][y] == 2) {
            return zero == -1 ? 1 : 0;
        }

        grid[x][y] = -1;
        zero--;
        int totalpaths = dfs(grid, zero, x + 1, y) +
            dfs(grid, zero, x - 1, y) +
            dfs(grid, zero, x, y + 1) +
            dfs(grid, zero, x, y - 1);

        grid[x][y] = 0;
        zero++;
        return totalpaths;
    }
    public int uniquePathsIII(int[][] grid) {
        int zero = 0, x = 0, y = 0;
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[0].length; j++) {
                if (grid[i][j] == 0) zero++;
                else if (grid[i][j] == 1) {
                    x = i;
                    y = j;
                }
            }
        }
        return dfs(grid, zero, x, y);
    }
}
