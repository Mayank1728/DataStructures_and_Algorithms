/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List < Double > averageOfLevels(TreeNode root) {
        List < Double > result = new ArrayList < > ();
        Queue < TreeNode > q = new LinkedList < > ();
        q.add(root);
        while (!q.isEmpty()) {
            int count = q.size();
            int size = count;
            double curr = 0;
            while (count != 0) {
                TreeNode temp = q.remove();
                curr += (double) temp.val;
                if (temp.left != null)
                    q.add(temp.left);
                if (temp.right != null)
                    q.add(temp.right);
                count--;
            }
            result.add(curr / size);
        }
        return result;
    }
}
