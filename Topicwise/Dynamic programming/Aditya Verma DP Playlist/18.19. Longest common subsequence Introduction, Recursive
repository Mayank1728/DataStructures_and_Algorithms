//Recursive

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG {
    public static int longestCommonSubsequence(String A, String B, int a, int b) {
        if (a == 0 || b == 0)
            return 0;
        else if (A.charAt(a - 1) == B.charAt(b - 1))
            return 1 + longestCommonSubsequence(A, B, a - 1, b - 1);
        return Math.max(longestCommonSubsequence(A, B, a - 1, b),
            longestCommonSubsequence(A, B, a, b - 1));
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            String A = sc.next();
            String B = sc.next();
            System.out.println(longestCommonSubsequence(A, B, a, b));
        }
    }
}

//DP: Memoization - Bottom up

//DP: Top down
