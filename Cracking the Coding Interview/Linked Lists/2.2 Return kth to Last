/*
Problem Statement:
Implement an algorithm to find the kth to last element of a singly linked list.
*/

package LinkedLists;

public class ReturnKthToLast_2 {

	static class Node {
		public Node(int data) {
			super();
			this.data = data;
			this.next = null;
		}

		int data;
		Node next;
	}

	public static void main(String args[]) {
		Node head = new Node(1);
		head.next = new Node(5);
		head.next.next = new Node(7);
		head.next.next.next = new Node(2);
		head.next.next.next.next = new Node(3);
		head.next.next.next.next.next = new Node(4);
		head.next.next.next.next.next.next = new Node(6);
		head.next.next.next.next.next.next.next = new Node(2);
		printList(head);
		printKthToLast(head, 5);
		printKthToLast(head, 11);
		printKthToLast(head, 0);
		printKthToLast(head, -1);
		printKthToLast(head, 3);
	}

	private static int printKthToLast(Node head, int k) {
		if (head == null) {
			return 0;
		}
		int index = printKthToLast(head.next, k) + 1;
		if (index == k) {
			System.out.println(head.data);
		}
		return index;
	}

	private static void printList(Node head) {
		Node node = head;
		while (node != null) {
			System.out.print(node.data + " ");
			node = node.next;
		}
		System.out.println();
	}
}
