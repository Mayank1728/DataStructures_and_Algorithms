package TreesAndGraphs;

import java.io.*;
import java.util.*;

class BuildOrder_7 {
	private int V;
	private LinkedList<Integer> adj[];

	BuildOrder_7(int v) {
		V = v;
		adj = new LinkedList[v];
		for (int i = 0; i < v; ++i)
			adj[i] = new LinkedList();
	}

	void addEdge(int v, int w) {
		adj[v].add(w);
	}

	private void topologicalSort() {
		Stack<Integer> stack = new Stack<Integer>();
		boolean visited[] = new boolean[V];
		for (int i = 0; i < V; i++) {
			if (visited[i] == false) {
				topologicalSortUtil(i, visited, stack);
			}
		}
		while (stack.empty() == false) {
			System.out.print(stack.pop() + " ");
		}
	}

	public void topologicalSortUtil(int i, boolean[] visited, Stack<Integer> stack) {
		visited[i] = true;
		Iterator itr = adj[i].iterator();
		while (itr.hasNext()) {
			int v = (int) itr.next();
			if (!visited[v]) {
				topologicalSortUtil(v, visited, stack);
			}
		}
		stack.push(i);
	}

	public static void main(String args[]) {
		BuildOrder_7 g = new BuildOrder_7(6);
		g.addEdge(5, 2);
		g.addEdge(5, 0);
		g.addEdge(4, 0);
		g.addEdge(4, 1);
		g.addEdge(2, 3);
		g.addEdge(3, 1);
		System.out.println("Following is a build order of the following project: ");
		g.topologicalSort();
	}
}
